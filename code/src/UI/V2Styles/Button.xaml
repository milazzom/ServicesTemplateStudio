<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:services="clr-namespace:Microsoft.Templates.UI.V2Services">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Microsoft.Templates.UI;component/V2Styles/_Thickness.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="Button" x:Key="WtsButton">
        <Setter Property="Foreground" Value="{Binding ButtonText, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="Background" Value="{Binding Button, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="BorderBrush" Value="{Binding ButtonBorder, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="FontSize" Value="{Binding Environment100PercentFontSize, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="FontFamily" Value="{Binding EnvironmentFontFamily, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Width" Value="75" />
        <Setter Property="Height" Value="23" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding ButtonHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding ButtonHoverText, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding ButtonBorderHover, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding ButtonPressed, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding ButtonPressedText, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding ButtonBorderPressed, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{Binding ButtonDisabled, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding ButtonDisabledText, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding ButtonBorderDisabled, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="{Binding ButtonFocused, Source={x:Static services:UIStylesService.Instance}}" />
                <Setter Property="TextElement.Foreground" Value="{Binding ButtonFocusedText, Source={x:Static services:UIStylesService.Instance}}" />
                <Setter Property="BorderBrush" Value="{Binding ButtonBorderFocused, Source={x:Static services:UIStylesService.Instance}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonFinish" BasedOn="{StaticResource WtsButton}">
        <Setter Property="BorderBrush" Value="{Binding ButtonPressed, Source={x:Static services:UIStylesService.Instance}}" />
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonIcon">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding ButtonHover, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding ButtonPressed, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonCloseNotification" BasedOn="{StaticResource WtsButtonIcon}">
        <Setter Property="Margin" Value="{StaticResource Margin_M_Right}" />
        <Setter Property="Padding" Value="{StaticResource Margin_M_LeftTopRightBottom}" />
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock
                    FontFamily="Segoe MDL2 Assets"
                    Text="&#xE106;"                    
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="{Binding Environment100PercentFontSize, Source={x:Static services:UIStylesService.Instance}}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonCloseNotificationInformation" BasedOn="{StaticResource WtsButtonCloseNotification}">
        <Setter Property="Foreground" Value="{Binding NotificationInformationText, Source={x:Static services:UIStylesService.Instance}}" />
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonCloseNotificationWarning" BasedOn="{StaticResource WtsButtonCloseNotification}">
        <Setter Property="Foreground" Value="{Binding NotificationWarningText, Source={x:Static services:UIStylesService.Instance}}" />
    </Style>

</ResourceDictionary>
