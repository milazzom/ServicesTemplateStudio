<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddFeaturesTitle" xml:space="preserve">
    <value>Add features</value>
    <comment>AddFeatures title on AddFeaturesPage</comment>
  </data>
  <data name="AddPagesTitle" xml:space="preserve">
    <value>Add pages</value>
    <comment>Add pages title on AddPagesPage</comment>
  </data>
  <data name="ButtonBack" xml:space="preserve">
    <value>Back</value>
    <comment>MainPage Back button</comment>
  </data>
  <data name="ButtonCancel" xml:space="preserve">
    <value>Cancel</value>
    <comment>MainPage Cancel button</comment>
  </data>
  <data name="ButtonCreate" xml:space="preserve">
    <value>Create</value>
    <comment>MainPage Create button</comment>
  </data>
  <data name="ButtonNext" xml:space="preserve">
    <value>Next</value>
    <comment>MainPage Next button</comment>
  </data>
  <data name="FrameworkTitle" xml:space="preserve">
    <value>Select a design pattern</value>
    <comment>Title on FrameworkPage</comment>
  </data>
  <data name="NewProjectTitle" xml:space="preserve">
    <value>New Universal Windows Platform app</value>
    <comment>Wizard title on WizardShell page</comment>
  </data>
  <data name="NotificationSyncStatus_Acquired" xml:space="preserve">
    <value>Done.</value>
    <comment>Notification message for Sync Status: Acquired</comment>
  </data>
  <data name="NotificationSyncStatus_Acquiring" xml:space="preserve">
    <value>Checking for template updates...</value>
    <comment>Notification message for Sync Status: Acquiring</comment>
  </data>
  <data name="NotificationSyncStatus_NewVersionAvailable" xml:space="preserve">
    <value>There is new template content available.</value>
    <comment>Notification message for Sync Status: New Version Available</comment>
  </data>
  <data name="NotificationSyncStatus_OverVersion" xml:space="preserve">
    <value>An update to the templates is available but not compatible with this wizard version. Update the extension to access the latest templates.</value>
    <comment>Notification message for Sync Status: Over Version</comment>
  </data>
  <data name="NotificationSyncStatus_OverVersionNoContent" xml:space="preserve">
    <value>There is no content available for this extension version. Update the extension to access to the latest content.</value>
    <comment>Notification message for Sync Status: Over Version No Content</comment>
  </data>
  <data name="NotificationSyncStatus_Prepared" xml:space="preserve">
    <value>Templates ready.</value>
    <comment>Notification message for Sync Status: Prepared</comment>
  </data>
  <data name="NotificationSyncStatus_Preparing" xml:space="preserve">
    <value>Preparing templates for first use...</value>
    <comment>Notification message for Sync Status: Preparing</comment>
  </data>
  <data name="NotificationSyncStatus_Updated" xml:space="preserve">
    <value>Templates updated.</value>
    <comment>Notification message for Sync Status: Updated</comment>
  </data>
  <data name="NotificationSyncStatus_Updating" xml:space="preserve">
    <value>Updating templates...</value>
    <comment>Notification message for Sync Status: Updating</comment>
  </data>
  <data name="ProjectDetailsFeaturesSectionTitle" xml:space="preserve">
    <value>Features</value>
    <comment>Feature list header on project details</comment>
  </data>
  <data name="ProjectDetailsFrameworkSectionTitle" xml:space="preserve">
    <value>Design pattern</value>
    <comment>Framework combobox header on project details</comment>
  </data>
  <data name="ProjectDetailsPagesSectionTitle" xml:space="preserve">
    <value>Pages</value>
    <comment>Page list header on project details</comment>
  </data>
  <data name="ProjectDetailsProjectTypeSectionTitle" xml:space="preserve">
    <value>Project type</value>
    <comment>Project type combobox header on project details</comment>
  </data>
  <data name="ProjectDetailsTitle" xml:space="preserve">
    <value>Your project details</value>
    <comment>Project details header on MainPage</comment>
  </data>
  <data name="ProjectTypeTitle" xml:space="preserve">
    <value>Select a project type</value>
    <comment>ProjectType Title on ProjectTypePage</comment>
  </data>
</root>